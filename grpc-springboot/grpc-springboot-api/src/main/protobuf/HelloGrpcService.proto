// 使用 proto3 语法 ,未指定则使用proto2
syntax = "proto3";

import "HelloGrpc.proto";

// 文件级别的选项，Protocol Buffer定义三种优化级别SPEED、CODE_SIZE、LITE_RUNTIME。
// SPEED: 默认级别。表示生成的代码运行效率高，但是由此生成的代码编译后会占用更多的空间。
option optimize_for = SPEED;
// 是否生成多个Java文件
option java_multiple_files = false;
// 生成代码的包路径
option java_package = "org.mytest.test.service";
// 生成Java外部类的名称，如果未指定该值，则会根据.proto文件的名称采用驼峰式的命名方式进行生成
// 定义的各个message其实是他的内部类
option java_outer_classname = "HelloGrpcServiceDefine";


service HelloGrpcService{
  // 简单RPC/一元RPC
  rpc request(Request) returns (Response);
  // 服务端流式RPC
  rpc serverStream(Request) returns (stream Response);
  // 客户端流式RPC
  rpc clientStream(stream Request) returns (Response);
  // 双向流RPC
  rpc bidirectionalStream(stream Request) returns (stream Response);
}

